" 
" init
" 
let g:status_line = ""
let g:current_time = strftime("󰥔 %H:%M ")
let g:current_os = "󰣇 ArchLinux"
let g:current_battery = "   " . trim(system("upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | awk '{print $2}'")) . " "
hi status_time_hl term=standout ctermfg=224 ctermbg=100
set statusline=%#status_time_hl#\ %{g:status_line}\%=%{g:current_time}\%{g:current_os}\%{g:current_battery}


" 
" settings
" 
set t_Co=256
set expandtab
set hlsearch
set incsearch
set smartcase
set tw=0
set encoding=utf-8
set hidden
set updatetime=100
set shortmess+=c
set backspace=indent,eol,start
set ruler
set title
set nocompatible
set modeline
set modelines=6
set belloff=all
set nrformats=
set wildmenu
set history=200
set foldlevel=99
set laststatus=2
set autochdir
set textwidth=500
set conceallevel=0
set jumpoptions=stack
set number
syntax on
autocmd FileType json set conceallevel=0


" 
" keybindings
" 
map J 5j
map sn :set nonumber<CR>
map K 5k
nnoremap S :w<CR>
nnoremap s <nop>
nnoremap Q :q<CR>
nnoremap <leader>q :q!<CR>
nnoremap sj :set splitbelow<CR>:split<CR>
nnoremap sk :set nosplitbelow<CR>:split<CR>
nnoremap sh :set nosplitright<CR>:vsplit<CR>
nnoremap sl :set splitright<CR>:vsplit<CR>
tnoremap <ESC><ESC> <C-\><C-N>
map <down> :res +5<CR>
map <up> :res -5<CR>
map <right> :vertical resize -5<CR>
map <left> :vertical resize +5<CR>
nnoremap <leader>r :source ~/.config/vim/vimrc<CR>
nnoremap [w :execute 'move -1-'. v:count1<CR>
nnoremap ]w :execute 'move +'. v:count1<CR>
vmap <leader>S y/<C-R>"<CR>
nnoremap <leader>e :set spell<CR>
nnoremap <leader>E :set nospell<CR>
nnoremap <leader>I :<C-u>PlugInstall<CR>
nnoremap M :Lexplore<CR><C-w>l<CR>
inoremap <C-e> <C-k>
nnoremap <leader>md :h digraph-table<CR>
cnoremap <expr> %% getcmdtype()==':'?expand('%:h').'/':'%%'
nnoremap <leader>f :echo synIDattr(synIDtrans(synID(line('.'), col('.'), 1)), 'name')<CR>


" 
" patch
" 
if has("patch-8.1.1564")
  set signcolumn=number
else
  set signcolumn=yes
endif


"
" theme
"
hi clear
syntax reset
set background=dark
set t_Co=256
" fundamental
hi Comment       ctermfg=243
hi String        ctermfg=75 
hi Number        ctermfg=75
hi Constant      ctermfg=75 
hi Identifier    ctermfg=81
hi Conditional   ctermfg=177
hi Repeat        ctermfg=75 
hi Label         ctermfg=12 
hi Structure     ctermfg=75 
hi Title         ctermfg=176
hi Statement     ctermfg=210
hi Search        ctermfg=237 ctermbg=81
hi Type          ctermfg=81
" vim-script     
hi vimMapLhs     ctermfg=210
hi vimMapRhs     ctermfg=181
hi vimSetEqual   ctermfg=210
hi vimUsrCmd     ctermfg=210
hi vimIsCommand  ctermfg=210
hi Special       ctermfg=75
" pop-up-menu    
hi Pmenu         ctermfg=81  ctermbg=237
hi PmenuSel      ctermfg=237 ctermbg=81
hi PmenuSbar     ctermfg=81  ctermbg=237
hi PmenuThumb    ctermfg=237 ctermbg=81
" hl-line
set cursorline
set cursorlineopt=number
autocmd ColorScheme * highlight CursorLineNr cterm=bold term=bold gui=bold
hi  LineNr       ctermfg=238
hi! link CursorLineNr PreProc
" tab-line
hi TabLine       ctermfg=NONE ctermbg=NONE term=underline cterm=underline 
" lisp
hi  lispSymbol   ctermfg=81
hi  lispAtomList ctermfg=181
" netrw
hi  Directory    ctermfg=75
hi  netrwPlain   ctermfg=210


"
" status-line
"
function! UpdateTime()
    let g:current_time = strftime("󰥔 %H:%M ")
    redrawstatus
endfunction
call timer_start(60000, { -> UpdateTime() }, {'repeat': -1})
function! UpdateBattery()
    let g:current_battery = "   " . trim(system("upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | awk '{print $2}'")) . " "
    redrawstatus
endfunction
call timer_start(60000, { -> UpdateBattery() }, {'repeat': -1})


" 
" plugin
" 
call plug#begin()
   " [jiangmiao/auto-pairs]
   Plug 'jiangmiao/auto-pairs'

   " [ryanoasis/vim-devicons]
   Plug 'ryanoasis/vim-devicons'

   " [Yggdroot/indentLine]
   Plug 'Yggdroot/indentLine'
   let g:indentLine_color_term=102
   let g:markdown_syntax_conceal=0
   let g:indentLine_char_list=['|']
   nnoremap <leader>il :<C-u>IndentLinesToggle<CR>

   " [mhinz/vim-signify]
   Plug 'mhinz/vim-signify'
   highlight SignifySignAdd ctermfg=green cterm=NONE
   highlight SignifySignDelete ctermfg=red cterm=NONE
   highlight SignifySignChange ctermfg=yellow cterm=NONE
   nnoremap <leader>gj <Plug>(signify-next-hunk)
   nnoremap <leader>gk <Plug>(signify-prev-hunk)
  
   " [prabirshrestha/asyncomplete.vim]
   Plug 'prabirshrestha/asyncomplete.vim'
   inoremap <expr> <C-j> pumvisible() ? "\<C-n>" : "\<C-j>"
   inoremap <expr> <C-k> pumvisible() ? "\<C-p>" : "\<C-k>"
   nnoremap <expr> <CR> pumvisible() ? asyncomplete#close_popup()

   if has('conceal')
     set conceallevel=2 concealcursor=niv
   endif

call plug#end()

" status-line
hi StatusLine ctermfg=81 ctermbg=NONE
