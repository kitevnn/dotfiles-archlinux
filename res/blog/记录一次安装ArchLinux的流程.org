* 安装archlinux的记录过程

** 0. 特别感谢

+ [[https://www.bilibili.com/video/BV1ag411K725][【archlinux】双系统真机安装演示]]

  #+begin_quote
  up主是双系统安装，是可以让archlinux与windows共存的方案。
  #+end_quote
  
+ [[https://arch.icekylin.online/guide/rookie/graphic-driver#intel-%E6%A0%B8%E8%8A%AF%E6%98%BE%E5%8D%A1][解决intel核显在KDE sddm下花屏的问题]]

  #+begin_quote
  *即不安装xf86-video-intel* 而是使用自带的Xorg的modesettings来驱动sddm图形界面。关于。这里特别感谢 [[https://github.com/icekylin][icekylin]]
  #+end_quote
 
** 1. efi分区扩容

因为在双系统下Windows默认的efi system为100MiB大小，基本是不够的

当我们的当前efi区容量比较小的时候，无论是生成新的bootloader引导文件啊，还是说什么设置什么hackintosh的efi文件，基本都是不够的。

如果efi分区容量确实是比较少的话，我们安装Arch Linux的时候就会在grub-install导致生成不了bl文件Grub Error: No Left Space To Create A Directory，导致识别不了新的系统引导文件，装了也是白装，下一次进系统还是windows。

所以必须要先在Windows里 ~磁盘管理(Win+X弹出菜单，然后选择磁盘管理)~ 都会先分出比如500M或1000M的空间出来，然后通过 ~cmd~ 来将 *更换efi分区，从而让ArchLinux与windows都使用此efi分区* (这仅仅只是我个人的方案哈！)
#+begin_src sh
  # administrator打开cmd

  diskpart

  list disk
  
  select disk <分出1024MiB的那个disk的编号>
  
  list partition
  
  create partition efi
  
  format quick fs = fat32
  
  # 创建挂载点别名P
  assign letter = P

  exit  
#+end_src

然后更换efi system到挂载点别名P上
#+begin_src sh
  # 一般来说 2018年后的电脑都有UEFI
  bcdboot C:\Windows /s P: /f UEFI
#+end_src

然后 *重启* 就可以 *更换到 windows 的 efi分区 到 您自己刚才设置的至少500M或至少1000M的分区上了*

** 2. 下载镜像

我们到这里 [[https://archlinux.org/download/][arch.org]] 来下载 torrent 磁链文件

我推荐的是使用 ~bitComet~ (您可以在windows上通过choco或winget来安装) 下载 torrent 里面的内容 (记得最好下载后挂一会bitComet，毕竟P2P模式人人为我我为人人，不过被PCDN检测到的话那另说，一般只是不滥用都是能继续挂的)

然后刻盘，我推荐用 ~rufus 3.2~ 比较早期的版本(反正我个人的经验是不要用 ~rufus 4.0~ 之上的版本)，可以刻录iso

找个新U盘，按下 ~确定~ 后选用 ~dd模式~ 来刻录

然后到windows的 ~磁盘管理~ (使用Win+X弹出菜单来选择磁盘管理) *我们一定要保证分出来的区域，在 [windows磁盘管理] 中，看上去的颜色是 [黑色] 的才行*

然后分区分个大概100来G吧，基本上就足够了。(您要分得大一点也可以的，最起码保证有30G的空间就足够了)

然后插U盘，插上就行了，这时在windows上 ~肯定是识别不出来的里面有什么文件~

别管，我们 ~按住Shift，然后用鼠标点击Windows的重启~ 然后就会进入到 ~windows疑难杂症~ 那里，然后选择 ~进入固件设置~

然后在固件设置里，您自己寻找 ~使用U盘~ 启动的方式，就可以 ~进入archiso~ 了

** 3. archiso过程记录
*** (1) 联网iwctl
#+begin_src sh
  # 进入interactive界面
  iwctl

  # 查看笔记本的网卡(wlan0)
  device list

  # 让笔记本网卡(wlan0)扫描附近网络
  station wlan0 scan

  # 让笔记本网卡(wlan0)获取附近网络
  station wlan0 get-networks

  # 联网
  station wlan0 connect 网络

  # 退出iwctl
  exit
#+end_src

*** (2) 设置系统时间
#+begin_src sh
  # 设置系统时间
  timedatectl set-ntp true
#+end_src


*** (3) fdisk分区
#+begin_src sh
  # 查看硬盘分区情况(笔记本唯一的一个固态硬盘: /dev/sda)
  lsblk

  # 查看硬盘信息
  # 我这里的情况是，我不一定能保证您的 [磁盘名称] 也是不是这样，如果不确定的话，请到一步一步跟着视频教程来 https://www.bilibili.com/video/BV1ag411K725
  # + ESP分区: /dev/sda4
  # + 135GiB空间主分区: /dev/sda8
  fdisk -l

  # 然后进行初始化
  # 这一步就 [相当于是将windows磁盘管理的⚫黑色分区，初始化为windows磁盘管理的🔵蓝色分区，我自己就是大致描述，希望您能理解到那个意思就行]
  fdisk /dev/sda
  # Press n    # n 就是 n键
  # Press RET  # RET 就是 Enter键
  # Press RET  # RET 就是 Enter键
  # Press RET  # RET 就是 Enter键
  # Press w    # w 就是 w键

  # 然后给此分区加上签名，有ext4、zfs、btrfs等等
  # 我个人只推荐使用 ext4 而不建议在非商业发行版上使用 btrfs (原因是非商业版的btrfs炸了没得修，个人不会修btrfs就这样)
  # /dev/sda8 是我的135GiB空间主分区，我不一定能保证您的 [磁盘名称] 也是不是这样，如果不确定的话，请到一步一步跟着视频教程来 https://www.bilibili.com/video/BV1ag411K725
  mkfs.ext4 /dev/sda8
#+end_src

*** (4) 挂载分区

解释

| 名词        | 名词解释                                                                             |
|-------------+-------------------------------------------------------------------------------------|
| ~挂载mount~ | ~在一颗B+文件树里面，将两个树节点连接起来的意思~ 我自己就是大致描述，希望您能理解到那个意思就行 |
| ~挂载分区~ | 这个词指的是 ~将存放操作系统的磁盘，放在想要放的位置路径空间上~ 我自己就是大致描述，希望您能理解到那个意思就行 |

#+begin_src sh
  # 我不一定能保证您的 [磁盘名称] 也是不是这样，如果不确定的话，请到一步一步跟着视频教程来 https://www.bilibili.com/video/BV1ag411K725  
  # 我不一定能保证您的 [磁盘名称] 也是不是这样，如果不确定的话，请到一步一步跟着视频教程来 https://www.bilibili.com/video/BV1ag411K725
  # 我不一定能保证您的 [磁盘名称] 也是不是这样，如果不确定的话，请到一步一步跟着视频教程来 https://www.bilibili.com/video/BV1ag411K725
  
  # 挂载主分区           (我的笔记本是/dev/sda8)到/mnt
  mount /dev/sda8 /mnt

  # 挂载EFI System分区   (我的笔记本是/dev/sda4)到/mnt/boot		# UEFI启动是这样的，MBR启动应该不用挂载
  mkdir /mnt/boot
  mount /dev/sda4 /mnt/boot	# 正是由于这里，所以会遇到后面的ESP大小容量不够导致的一个小问题: Grub Error: No Left Space To Create A Directory.  
#+end_src


*** (5) 设置镜像源
#+begin_src sh
  # 使用vim打开mirrorlist
  vim /etc/pacman.d/mirrorlist

  # 并添加下面的ustc(中科大)的镜像源
  Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch
#+end_src

*** (6) pacstrap安装必要的软件
#+begin_src sh
# 作用: 让 pacstrap装修师傅 对着 /mnt 这个新家，进行装修(安装软件)
pacstrap /mnt base base-devel linux linux-firmware dhcpcd
#+end_src

*** (7) genfstab
#+begin_src sh

  # 作用: genfstab，好像是让它能识别到SWAP分区之类的
  genfstab -L /mnt >> /mnt/etc/fstab
  
  # 查看(我的笔记本)情况
  # /dev/sda8   =>   /	   btrfs
  # /dev/sda4   =>   /boot   vfat
  cat /mnt/etc/fstab
#+end_src

*** (8) arch-chroot
#+begin_src sh
  # 作用: 把自己搬进了毛胚房新家(此时的/mnt新家，还是刚装修完，装修师傅没有打扫卫生，自己的行李还没放置进去)
  arch-chroot /mnt

  # 效果
  # root@archiso ~#  会改成=>会改成  [root@archiso /]#
#+end_src
```

*** (9) 设置时区
#+begin_src sh
  # 设置时间区域为亚洲/上海(Asia/Shanghai)
  ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
#+end_src

*** (10) 同步时间为硬件时间
#+begin_src sh
  # hwclock  
  hwclock --systohc
#+end_src

*** (11) 安装一些软件
#+begin_src sh
  # vim在快速编辑一些文件还是很有用武之地的，还是十分推荐安装vim.....
  pacman -S vim dialog wpa_supplicant ntfs-3g networkmanager netctl
#+end_src
```

*** (12) 设置本机环境
#+begin_src sh
  # 设置语言
  # en_US.UTF-8 UTF-8	改成=>改成    en_US.UTF-8 UTF-8
  # zh_CN.UTF-8 UTF-8	改成=>改成    zh_CN.UTF-8 UTF-8
  # zh_TW.UTF-8 UTF-8	改成=>改成    zh_TW.UTF-8 UTF-8
  # zh_HK.UTF-8 UTF-8	改成=>改成    zh_HK.UTF-8 UTF-8
  vim /etc/locale.gen

  # 生成语言项
  locale-gen

  # 设置系统环境语言
  #			改成=>改成    LANG=en_US.UTF-8
  vim /etc/locale.conf

  # 设置主机名( 主机名 要记住)
  # 			改成=>改成    kle(你自己设置一个名称，比如我这里设置kle，后面就要用到kle)
  vim /etc/hostname

  # 激活主机名
  # 127.0.0.1 localhost
  # ::1 localhost
  # 127.0.1.1 kle.localdomain kle  (kle是我自己的 主机名 )
  vim /etc/hosts

  # 设置root密码
  passwd

  # 安装intel CPU微码
  pacman -S intel-ucode
#+end_src

*** (13) 设置bootloader引导程序
#+begin_src sh  
  # 不弄会怎样？那bootloader就找不到archlinux
  # 那么您下次进入系统还是windows，即使您进入了bios固件设置，仍然只会找到windows的引导文件
  # bootloader作用: 用的grub来让硬件驱动起来，来跑软件(这里的软件指的是操作系统)

  # os-prober: 是为了安装让archlinux与windows10双系统共存
  # 与时俱进: 好像说不用装这个了，但为了以防万一还是装上吧！
  pacman -S os-prober ntfs-3g
  pacman -S grub efibootmgr

  # 是的没错！台式机就是因为ESP分区太小了(台式机装了windows10默认是100MiB, 视频演示是200MiB的EFI System，我自己的笔记本是1000MiB的EFI System)，导致Grub Error: No Space Left to Create A Directory.
  # 是这个原因: 视频主教的是把 [efi分区] 全部挂载到 [挂载点: /boot] 下。
  # 是这个方案: 把 [efi分区] 单独挂载到 [挂载点: /efi] 下。
  # Installation finished. No error reported.
  grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub

  # grub-mkconfig 输出生成grub配置文件(此时环境: U盘里面，所以应该是只有 [archlinux] 该软件(这里的软件指的是操作系统))
  cd /boot && mkdir grub
  cd ../
  grub-mkconfig -o /boot/grub/grub.cfg
#+end_src

*** (14) 准备拔u盘
#+begin_src sh
  exit
  # 效果: [root@archiso /]#   会改成=>会改成    root@archiso ~#
  
  reboot
  # 重启，黑屏了就拔u盘，防止二次进入archiso(这得看主板那时的设置)

  # 备注
  # + 如果您出先了 "watchdog did not stop" 的提示，最好等待个10来分钟左右，不要拔U盘，等待了10分钟之后直接硬件关机然后再拔U盘不然装不上的，如果出现了并强行拔下来的话需要重装从这句话之上面的每一步。
  # + 反正我自己今年4月份安装的时候，在我自己这台笔记本上是这样的
  # + 但是现在2024年10月1日的镜像不用等了，直接当电脑黑屏就能直接拔U盘了。

  # OK
  # + 如果您拔了U盘之后，一般来说就会进入到 [全新安装好的ArchLinux了]
  # + 然后我们在tty上登陆
  # + 输入 "root" 字符
  # + 输入 "您刚刚您自己设置过的密码" (密码不会回显的)  
#+end_src

*** (15) 让grub，同样能发现windows的入口
#+begin_src sh
  # 这是我跟着 https://www.bilibili.com/video/BV1ag411K725 视频教程来一步一步做的，视频怎么样我就怎么样
  # 
  # 作用
  # + 生成grub引导文件，从而在grub引导菜单时，也能选择windows10去跑软件(这里的软件指的是windows10操作系统)起来
  # + grub-mkconfig 输出生成grub配置文件(此时环境: 笔记本里面)
  grub-mkconfig -o /boot/grub/grub.cfg	       	
#+end_src

*** (16) 在本机环境下的配置
#+begin_src sh
  # 网络连接
  # + 如果是有线网线连接的话，就已经连上网了。于是跳到SWAP分区dd if那里
  # + 如果是无线连接的话，必须进行下面的步骤。

  # 首先，无论有线无线网络连接，必须先开启服务
  systemctl enable NetworkManager
  systemctl start NetworkManager
  # 无线联网(如果是有线的话，在开启上面的服务后就可以直接联网了)
  # + 当然用 [nmtui] 其实更快。
  nmcli dev wifi list
  nmcli dev wifi connect "网络名" password "密码"

  # 设置SWAP分区(SWAP分区为2048MiB~2GiB大小)
  dd if=/dev/zero of=/swapfile bs=1M count=2048 status=progress
  chmod 600 /swapfile
  mkswap /swapfile
  swapon /swapfile

  # 手搓一下fstab，来开启SWAP
  vim /etc/fstab

  # 使用vim来添加下面的文本
  /swapfile     none    swap      defaults                0 0
#+end_src

*** (17) 创建自己日用的一个用户，而不是一个root用户
#+begin_src sh
  # 我的日用用户名是: kle
  useradd -m -G wheel kle

  # 然后第1次输入 日用用户名的密码
  # 然后第2次输入 日用用户名的密码
  passwd 日用用户名
#+end_src

*** (18) 一些设置
#+begin_src sh
  # 安装sudo
  pacman -S sudo

  # 编辑器设置(为了用visudo) sudo vim /etc/sudoers
  ln -s /usr/bin/vim /usr/bin/vi

  # 编辑进行下面的修改
  visudo
  #%wheel ALL=(ALL:ALL) ALL    改成=>改成    %wheel ALL=(ALL:ALL) ALL

  # 切换到日用用户名，并且通过su，来给予root权限 (我自己的日用用户名是: kle)
  su kle
#+end_src

*** (19) 准备安装DE
#+begin_src sh
  # 开启一些可用仓库源
  #[multilib]			     改成=>改成    [multilib]
  #include=/etc/pacman.d/mirrorlist    改成=>改成    include=/etc/pacman.d/mirrorlist
  #				     改成=>改成    [archlinuxcn]					
  #				     改成=>改成    Server = https://repo.archlinuxcn.org/$arch
  sudo vim /etc/pacman.conf

  # 强制开滚，保持与archlinuxcn源的同步
  sudo pacman -Syy

  # archlinuxcn的密钥环
  # + 好像是因为人手不够，删除了一个master key
  # + 导致fc教授的可信程度设置到marginal trust导致的
  # + 现在手动要信任sudo pacman -Syy后存在机器本地的fc教授farseerfc的密钥
  sudo pacman-key --lsign-key "farseerfc@archlinux.org"
  # 这一步的钩子函数运行时间，较长，静静等待就好。
  sudo pacman -S archlinuxcn-keyring

  # 显卡驱动
  # + archlinux，拒绝N卡闭源驱动，不然KP警告！我笔记本有Intel核显就用核显了
  # + 致敬在ArchLinux下使用N卡闭源驱动的勇士(就是那个官网下载下来的xxxx.run脚本执行的那个)

  # 接下来要装什么包的说明
  # + https://wiki.archlinuxcn.org/wiki/Xorg#%E5%AE%89%E8%A3%85
  # + 比如在我个人的笔记本上，不要安装这个xf86-intel-video，否则将会导致sddm登录界面花屏闪烁
  # + 导致永远无法通过sddm切换其余的桌面环境(但是盲输密码是可以登录KDE plasma on Wayland的)
  # + 不安装xf86-video-intel时，会默认使用自带的Xorg的modesetting。
  sudo pacman -S mesa     	       			   

  # 安装美丽现代的KDE
  sudo pacman -S xorg plasma kde-applications sddm network-manager-applet
  # + 然后一直RET(Enter)下去就行了，按个大概10来次都确定就行了
  # + 因为 https://www.bilibili.com/video/BV1ag411K725 视频教程也是全部确定的
#+end_src
		
*** (20) 启动桌面服务
#+begin_src sh
  # 打开桌面管理器sddm，它的功能即名称 "桌面管理器" 反正打开服务就是了
  sudo sytemctl enable sddm

  # 关闭一些服务
  sudo systemctl disable netctl

  # 开启网络服务
  sudo systemctl enable NetworkManager
#+end_src

*** (21) 安装中文字体
#+begin_src sh  
  sudo pacman -S wqy-microhei wqy-microhei-lite wqy-bitmapfont wqy-zenhei ttf-arphic-ukai ttf-arphic-uming adobe-source-han-sans-cn-fonts noto-fonts-cjk
#+end_src

*** (22) paru安装
#+begin_src sh
  # 这一步可以先在配置了本地代理后再安装，不然装一些crates包挺慢的
  # 这一步可以先在配置了本地代理后再安装，不然装一些crates包挺慢的
  # 这一步可以先在配置了本地代理后再安装，不然装一些crates包挺慢的
  cd $home
  mkdir .paru/ && cd .paru/
  sudo pacman -S git
  git clone https://aur.archlinux.org/paru.git 
  cd paru
  makepkg -si
#+end_src

*** (23) 重新设置本机语言
#+begin_src sh
  
  # 重新设置本机语言
  sudo vim /etc/locale.conf
  # LANG=en_US.UTF-8    改成=>改成    LANG=zh_CN.UTF-8
#+end_src

*** (24) 太美丽啦KDE
#+begin_src sh
  sudo reboot
#+end_src

*** (25) 一些安装
#+begin_src sh
  # 安装fcitx5全家桶
  sudo pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-rime fcitx5-material-color

  # 编辑开机启动fcitx5
  #        	改成=>改成	GTK_IM_MODULE=fcitx
  #        	改成=>改成	QT_IM_MODULE=fcitx
  #        	改成=>改成	XMODIFIERS=@im=fcitx
  #        	改成=>改成    	SDL_IM_MODULE=fcitx
  sudo vim /etc/environment

  # 在KDE下，需要
  #	> 系统设置
  #	> 键盘
  #	> 虚拟键盘
  #	> 选择 "Fcitx5" (而不是 "Fcitx5 Wayland启动器(实.."))
  #
  # 来让KDE桌面环境，识别出fcitx5。从而自己在send-key时，能发C-SPC到KDE on Wayland上，进行切换输入法。

  # 电池充电阈值
  # + 需要看厂商的硬件支持
  # + 如果用windows11时能开启的话这里也能开启，如果没有的话那就开不了)
  sudo systemctl disable powertop
  sudo systemctl disable tlp
  sudo systemctl stop powertop
  sudo systemctl stop tlp

  # 您自己看情况修改，比如我这里是当充电少于75%就开始充电，充电到80%就停下。
  # + 具体的必须看主板厂商 [如何安排这些硬件的名称]
  # + 具体的必须看主板厂商 [如何安排这些硬件的功能]
  sudo vim /etc/tlp.conf
  #START_CHARGE_THRESH_BAT0=75    =>    START_CHARGE_THRESH_BAT0=75
  #STOP_CHARGE_THRESH_BAT0=80    =>    STOP_CHARGE_THRESH_BAT0=80

  # 开启电池管理阈值服务
  sudo systemctl enable tlp

  # 终端模拟器
  # + 我用习惯了alacritty而已，kitty也行
  sudo pacman -S alacritty

  # 我现在个人用的是X11桌面服务器
  # + 原因是今年5月Hyprland刚脱离wlr那会，在Wayland的Hyprland(窗管原神)，半天就崩溃了Emacs几十次，都用到有点PTSD了，所以故全面转向X11
  # + 如果您用的是X11的话，那就不用设置下面的。
  # + 如果您用的是Wayland的话，而且还用的是alacritty终端模拟器的话，那就需要设置下面的。
  # alacritty走x11协议
  #			改成=>改成      WINIT_UNIX_BACKEND=x11 alacritty
  sudo vim /etc/environment

  # + 如果是kitty的话，换成 WINIT_UNIX_BACKEND=x11 kitty
#+end_src

*** (26) 打字体补丁
#+begin_quote
在 [[https://github.com/colfwe/dotfiles][colfwe/dotfiles]] 这里有说如何详细地打字体补丁
#+end_quote

